# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: CI/CD

on:
  push:
      branches: main
      tags: v*.*.*

  pull_request:
      types:
          - synchronize
          - opened
          - reopened

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

env: 
  GITHUB_TOKEN: ${{github.token}}
  GITHUB_ACTION: "TRUE"

jobs:

 create_release:
    name: Create Release
    runs-on: ubuntu-latest
    strategy:
        matrix:
            arch: ["armhf", "amd64"]
    permissions:
      contents: write
      discussions: write
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - 
        name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@v2
      -
        name: Extract project name
        id: extract
        run: |
           echo proj="$(basename  ${{github.workspace}})" >> $GITHUB_OUTPUT
      - 
        name: Build Project
        uses: devcontainers/ci@v0.3
        with:
          subFolder: "${{github.workspace}}"
          configFile: .devcontainer/${{matrix.arch}}-container/devcontainer.json
          push: never
          runCmd: |
            rm -rf  "/workspaces/${{steps.extract.outputs.proj}}/build" 
            mkdir "/workspaces/${{steps.extract.outputs.proj}}/build"
            cd "/workspaces/${{steps.extract.outputs.proj}}/build"
            cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo ../
            cmake --build .
            ctest . --output-on-failure
            echo 'set(CPACK_PACKAGE_DIRECTORY /workspaces/${{steps.extract.outputs.proj}}/dist)' >  /workspaces/${{steps.extract.outputs.proj}}/build/CPackProperties.cmake
            cpack .
      - 
        name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          generate_release_notes: true
          files: |
            dist/*.deb